# Default values for kagent

# ==============================================================================
# GLOBAL CONFIGURATION
# ==============================================================================

tag: ""
registry: "cr.kagent.dev"


imagePullSecrets: []
imagePullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# -- Override the namespace
# @default -- `.Release.Namespace`
namespaceOverride: ""

podAnnotations: {}

# -- Additional labels to add to all Kubernetes resources
labels: {}
  # environment: production
  # team: platform

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# ==============================================================================
# CORE KAGENT COMPONENTS
# ==============================================================================

# -- Node taints which will be tolerated for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
tolerations: []

# -- Node labels to match for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
nodeSelector: {}

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

database:
  type: sqlite
  sqlite:
    databaseName: kagent.db
  postgres:
    url: postgres://postgres:kagent@pgsql-postgresql.kagent.svc.cluster.local:5432/postgres

# ==============================================================================
# CONTROLLER CONFIGURATION
# ==============================================================================

controller:
  replicas: 1
  loglevel: "info"
  agentImage:
    registry: ""
    repository: kagent-dev/kagent/app
    tag: "" # Will default to global, then Chart version
    pullPolicy: ""
  streaming: # Streaming buffer size for A2A communication
    maxBufSize: 1Mi # 1024 * 1024
    initialBufSize: 4Ki # 4 * 1024
    timeout: 600s # 600 seconds
  # -- Namespaces the controller should watch.
  # If empty, the controller will watch ALL available namespaces.
  # @default -- [] (watches all available namespaces)
  watchNamespaces: []
  #  - watch-ns-1
  #  - watch-ns-2

  # -- Node taints which will be tolerated for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  tolerations: []

  # -- Node labels to match for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  nodeSelector: {}

  image:
    registry: ""
    repository: kagent-dev/kagent/controller
    tag: "" # Will default to global, then Chart version
    pullPolicy: ""
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2
      memory: 512Mi
  service:
    type: ClusterIP
    ports:
      port: 8083
      targetPort: 8083
  env: []

# ==============================================================================
# UI CONFIGURATION
# ==============================================================================

ui:
  replicas: 1
  image:
    registry: ""
    repository: kagent-dev/kagent/ui
    tag: ""
    pullPolicy: ""
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  service:
    type: ClusterIP
    ports:
      port: 8080
      targetPort: 8080
  env: {} # Additional configuration key-value pairs for the ui ConfigMap

  # -- Node taints which will be tolerated for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  tolerations: []

  # -- Node labels to match for `Pod` [scheduling](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
  nodeSelector: {}

# ==============================================================================
# LLM PROVIDERS CONFIGURATION
# ==============================================================================
# https://kagent.dev/docs/getting-started/configuring-providers

providers:
  default: openAI
  openAI:
    provider: OpenAI
    model: "gpt-4.1-mini"
    apiKeySecretRef: kagent-openai
    apiKeySecretKey: OPENAI_API_KEY
    # apiKey: ""
  ollama:
    provider: Ollama
    model: "llama3.2"
    config:
      host: host.docker.internal:11434
  anthropic:
    provider: Anthropic
    model: "claude-3-5-haiku-20241022"
    apiKeySecretRef: kagent-anthropic
    apiKeySecretKey: ANTHROPIC_API_KEY
    # apiKey: ""
  azureOpenAI:
    provider: AzureOpenAI
    model: "gpt-4.1-mini"
    apiKeySecretRef: kagent-azure-openai
    apiKeySecretKey: AZUREOPENAI_API_KEY
    # apiKey: ""
    config:
      apiVersion: "2023-05-15"
      azureAdToken: ""
      azureDeployment: ""
      azureEndpoint: ""
  gemini:
    provider: Gemini
    model: "gemini-2.0-flash-lite"
    apiKeySecretRef: kagent-gemini
    apiKeySecretKey: GOOGLE_API_KEY
    # apiKey: ""

# ==============================================================================
# BUILT-IN TOOLS
# ==============================================================================

kagent-tools:
  fullnameOverride: kagent-tools
  enabled: true
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  tools:
    loglevel: "debug"

# ==============================================================================
# AGENTS
# ==============================================================================

agents:
  k8s-agent:
    enabled: true
  kgateway-agent:
    enabled: false
  istio-agent:
    enabled: false
  promql-agent:
    enabled: true
  observability-agent:
    enabled: true
  argo-rollouts-agent:
    enabled: false
  helm-agent:
    enabled: false
  cilium-policy-agent:
    enabled: false
  cilium-manager-agent:
    enabled: false
  cilium-debug-agent:
    enabled: false

tools:
  grafana-mcp:
    enabled: true
  querydoc:
    enabled: true








# controllers:
#   home-assistant:
#     annotations:
#       reloader.stakater.com/auto: "true"

#     pod:
#       securityContext:
#         runAsUser: 2000
#         runAsGroup: 2000
#         fsGroup: 2000
#         fsGroupChangePolicy: OnRootMismatch

#     containers:
#       app:
#         image:
#           repository: ghcr.io/home-operations/home-assistant
#           tag: 2025.9.4
#         resources:
#           requests:
#             cpu: 47m
#             memory: 256Mi
#           limits:
#             memory: 2Gi
#         securityContext:
#           allowPrivilegeEscalation: false
#           readOnlyRootFilesystem: true
#           capabilities:
#             drop:
#               - ALL
#         envFrom:
#           - secretRef:
#               name: home-assistant-secret
#       code-server:
#         image:
#           repository: ghcr.io/coder/code-server
#           tag: "4.101.2"
#         args:
#           - --auth
#           - none
#           - --disable-telemetry
#           - --disable-update-check
#           - --user-data-dir
#           - /config/.code-server
#           - --extensions-dir
#           - /config/.code-server
#           - --port
#           - "12321"
#           - /config
#         env:
#           HASS_SERVER: http://localhost:8123
#         resources:
#           requests:
#             cpu: 10m
#           limits:
#             memory: 512Mi

# service:
#   app:
#     controller: home-assistant
#     type: LoadBalancer
#     annotations:
#       ilbipam.cilium.io/ips: 192.168.0.227
#     ports:
#       http:
#         port: 8123
#       code-server:
#         port: 12321
# route:
#   app:
#     hostnames:
#       - ha.pitower.link
#     parentRefs:
#       - name: envoy-external
#         namespace: networking
#         sectionName: https
#     rules:
#       - backendRefs:
#           - identifier: app
#             port: 8123
#   code:
#     hostnames:
#       - ha-code.pitower.link
#     parentRefs:
#       - name: envoy-internal
#         namespace: networking
#         sectionName: https
#     rules:
#       - backendRefs:
#           - identifier: code-server
#             port: 12321

# ingress:
#   app:
#     className: external
#     annotations:
#       external-dns.alpha.kubernetes.io/target: external.pitower.link
#       nginx.ingress.kubernetes.io/rewrite-target: /$1
#     hosts:
#       - host: &host ha.pitower.link
#         paths:
#           - path: /(.*)
#             service:
#               identifier: app
#               port: http
#     tls:
#       - hosts:
#           - *host
#   code-server:
#     className: external
#     annotations:
#       external-dns.alpha.kubernetes.io/target: external.pitower.link
#       nginx.ingress.kubernetes.io/rewrite-target: /$2
#       nginx.ingress.kubernetes.io/auth-method: "GET"
#       nginx.ingress.kubernetes.io/auth-url: "http://authelia.security.svc.cluster.local/api/authz/auth-request"
#       nginx.ingress.kubernetes.io/auth-signin: "https://auth.pitower.link?rm=$request_method"
#       nginx.ingress.kubernetes.io/auth-response-headers: "Remote-User,Remote-Name,Remote-Groups,Remote-Email"
#     hosts:
#       - host: *host
#         paths:
#           - path: /code(/|$)(.*)
#             service:
#               identifier: app
#               port: code-server
#     tls:
#       - hosts:
#           - *host
# persistence:
#   config:
#     existingClaim: home-assistant-config
#     advancedMounts:
#       home-assistant:
#         app:
#           - path: /config
#         code-server:
#           - path: /config
#   tmpfs:
#     type: emptyDir
#     advancedMounts:
#       home-assistant:
#         app:
#           - path: /tmp
#             subPath: hass-tmp
#         code-server:
#           - path: /tmp
#             subPath: code-server-tmp
#           - path: /nonexistent
#             subPath: nonexistent
