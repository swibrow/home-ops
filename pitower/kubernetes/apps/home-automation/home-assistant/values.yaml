controllers:
  home-assistant:
    annotations:
      reloader.stakater.com/auto: "true"

    pod:
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch

    containers:
      app:
        image:
          repository: ghcr.io/home-operations/home-assistant
          tag: 2025.9.4
        resources:
          requests:
            cpu: 47m
            memory: 256Mi
          limits:
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        envFrom:
          - secretRef:
              name: home-assistant-secret
      code-server:
        image:
          repository: ghcr.io/coder/code-server
          tag: "4.105.1"
        args:
          - --auth
          - none
          - --disable-telemetry
          - --disable-update-check
          - --user-data-dir
          - /config/.code-server
          - --extensions-dir
          - /config/.code-server
          - --port
          - "12321"
          - /config
        env:
          HASS_SERVER: http://localhost:8123
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 512Mi

service:
  app:
    controller: home-assistant
    type: LoadBalancer
    annotations:
      ilbipam.cilium.io/ips: 192.168.0.227
    ports:
      http:
        port: 8123
      code-server:
        port: 12321
route:
  app:
    hostnames:
      - ha.pitower.link
    parentRefs:
      - name: envoy-external
        namespace: networking
        sectionName: https
    rules:
      - backendRefs:
          - identifier: app
            port: 8123
  code:
    hostnames:
      - ha-code.pitower.link
    parentRefs:
      - name: envoy-internal
        namespace: networking
        sectionName: https
    rules:
      - backendRefs:
          - identifier: code-server
            port: 12321

# ingress:
#   app:
#     className: external
#     annotations:
#       external-dns.alpha.kubernetes.io/target: external.pitower.link
#       nginx.ingress.kubernetes.io/rewrite-target: /$1
#     hosts:
#       - host: &host ha.pitower.link
#         paths:
#           - path: /(.*)
#             service:
#               identifier: app
#               port: http
#     tls:
#       - hosts:
#           - *host
#   code-server:
#     className: external
#     annotations:
#       external-dns.alpha.kubernetes.io/target: external.pitower.link
#       nginx.ingress.kubernetes.io/rewrite-target: /$2
#       nginx.ingress.kubernetes.io/auth-method: "GET"
#       nginx.ingress.kubernetes.io/auth-url: "http://authelia.security.svc.cluster.local/api/authz/auth-request"
#       nginx.ingress.kubernetes.io/auth-signin: "https://auth.pitower.link?rm=$request_method"
#       nginx.ingress.kubernetes.io/auth-response-headers: "Remote-User,Remote-Name,Remote-Groups,Remote-Email"
#     hosts:
#       - host: *host
#         paths:
#           - path: /code(/|$)(.*)
#             service:
#               identifier: app
#               port: code-server
#     tls:
#       - hosts:
#           - *host
persistence:
  config:
    existingClaim: home-assistant-config
    advancedMounts:
      home-assistant:
        app:
          - path: /config
        code-server:
          - path: /config
  tmpfs:
    type: emptyDir
    advancedMounts:
      home-assistant:
        app:
          - path: /tmp
            subPath: hass-tmp
        code-server:
          - path: /tmp
            subPath: code-server-tmp
          - path: /nonexistent
            subPath: nonexistent
