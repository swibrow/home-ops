controllers:
  authelia:
    replicas: 1
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    pod:
      # securityContext:
      #   runAsUser: 2000
      #   runAsGroup: 2000
      #   runAsNonRoot: true
      #   fsGroup: 2000
      #   fsGroupChangePolicy: "OnRootMismatch"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: authelia

    containers:
      app:
        image:
          repository: ghcr.io/authelia/authelia
          tag: 4.39.9
        env:
          AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:8080
          AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
          AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:9000
          AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
          AUTHELIA_THEME: dark
          X_AUTHELIA_CONFIG: /config/configuration.yaml
          X_AUTHELIA_CONFIG_FILTERS: expand-env
        envFrom:
          - secretRef:
              name: authelia-secrets
          - secretRef:
              name: authelia-secret
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api/health
                port: &port 8080
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
          startup:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api/health
                port: *port
              failureThreshold: 30
              periodSeconds: 10
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 128Mi
        # securityContext:
        #   allowPrivilegeEscalation: false
        #   readOnlyRootFilesystem: true
        #   capabilities:
        #     drop:
        #       - ALL

service:
  app:
    controller: authelia
    ports:
      http:
        port: 80
        targetPort: *port
      metrics:
        port: 9000

ingress:
  app:
    className: external
    annotations:
      external-dns.alpha.kubernetes.io/target: external.pitower.link
      nginx.ingress.kubernetes.io/configuration-snippet: |
        add_header Cache-Control "no-store";
        add_header Pragma "no-cache";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
    hosts:
      - host: &host auth.pitower.link
        paths:
          - path: /
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - *host
serviceMonitor:
  app:
    serviceName: authelia
    endpoints:
      - port: metrics
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s
persistence:
  config:
    type: secret
    name: authelia-secret
    globalMounts:
      - path: /config/configuration.yaml
        subPath: configuration.yaml
        readOnly: true
