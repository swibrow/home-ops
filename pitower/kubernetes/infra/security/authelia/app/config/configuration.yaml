---
# Note: Authelia vars should be escaped with $${VAR_NAME} to avoid interpolation by Flux
log:
  level: 'debug'

authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 1m
  ldap:
    address: ldap://lldap.security.svc.cluster.local:389
    implementation: custom
    timeout: 5s
    start_tls: false
    base_dn: dc=pitower,dc=link
    additional_users_dn: ou=people
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=groups
    groups_filter: (member={dn})
    group_search_mode: filter
    user: "$${LLDAP_BIND_USER_DN}"
    password: "$${LLDAP_BIND_PASSWORD}"
    attributes:
      username: uid
      display_name: displayName
      mail: mail
      member_of: memberOf
      group_name: cn

session:
  secret: "a_very_important_secret"
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: pitower_link_session
      domain: pitower.link
      authelia_url: https://auth.pitower.link
      default_redirection_url: https://pitower.link
  # redis:
  #   host: dragonfly.database.svc.cluster.local
  #   database_index: 1

storage:
  encryption_key: 'a_very_important_secret'
  local:
    path: '/config/db.sqlite3'

notifier:
  disable_startup_check: true
  smtp:
    address: smtp-relay.default.svc.cluster.local:25
    sender: Authelia <authelia@pitower.link>
    disable_require_tls: true

# totp:
#   disable: false
#   issuer: authelia.com

# webauthn:
#   disable: true

# duo_api:
#   disable: true

access_control:
  default_policy: one_factor
  rules:
    - domain:
        - actual.pitower.link
      subject:
        - ["group:auth_users"]
      policy: one_factor
    - domain:
        - jellyfin.pitower.link
      subject:
        - ["group:auth_users"]
      policy: one_factor

# identity_validation:
#   reset_password:
#     jwt_secret: "{{ .authelia_jwt_secret }}"

identity_providers:
  oidc:
    clients:
      - client_id: $${OIDC_JELLYFIN_CLIENT_ID}"
        client_name: 'Jellyfin'
        client_secret: "$${OIDC_JELLYFIN_CLIENT_SECRET}"
        public: false
        authorization_policy: 'one_factor'
        require_pkce: true
        pkce_challenge_method: 'S256'
        redirect_uris:
          - 'https://jellyfin.pitower.link/sso/OID/redirect/authelia'
        scopes:
          - 'openid'
          - 'profile'
          - 'groups'
        userinfo_signed_response_alg: 'none'
        token_endpoint_auth_method: 'client_secret_post'

# identity_providers:
#   oidc:
#     hmac_secret: "{{ .authelia_oidc_hmac_secret }}"
#     cors:
#       endpoints: ["authorization", "token", "revocation", "introspection"]
#       allowed_origins_from_client_redirect_uris: true
#     jwks:
#       - key: |-
#           {{- .authelia_oidc_issuer_key | nindent 10 }}
#         algorithm: 'RS256'
#     clients:
#       - client_id: "{{ .grafana_oauth_client_id }}"
#         client_name: Grafana
#         client_secret: "{{ .grafana_oauth_client_secret }}"
#         public: false
#         authorization_policy: one_factor
#         pre_configured_consent_duration: 1y
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://grafana.bjw-s.dev/login/generic_oauth
#         userinfo_signed_response_alg: none

#       - client_id: "{{ .miniflux_oauth_client_id }}"
#         client_name: Miniflux
#         client_secret: "{{ .miniflux_oauth_client_secret }}"
#         public: false
#         authorization_policy: one_factor
#         pre_configured_consent_duration: 1y
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://miniflux.bjw-s.dev/oauth2/oidc/callback
#         userinfo_signed_response_alg: none

#       - client_id: "{{ .nodered_oauth_client_id }}"
#         client_name: Node-RED
#         client_secret: "{{ .nodered_oauth_client_secret }}"
#         public: false
#         authorization_policy: one_factor
#         pre_configured_consent_duration: 1y
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://nodered.bjw-s.dev/auth/strategy/callback
#         userinfo_signed_response_alg: none
#         token_endpoint_auth_method: client_secret_post

#       - client_id: "{{ .paperless_oauth_client_id }}"
#         client_name: Paperless
#         client_secret: "{{ .paperless_oauth_client_secret }}"
#         public: false
#         authorization_policy: one_factor
#         pre_configured_consent_duration: 1y
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://paperless.bjw-s.dev/accounts/oidc/authelia/login/callback/
#         userinfo_signed_response_alg: none

#       - client_id: ocis
#         client_name: OCIS
#         public: true
#         authorization_policy: one_factor
#         pre_configured_consent_duration: 1y
#         scopes: ["openid", "profile", "groups", "email"]
#         redirect_uris:
#           - https://files.bjw-s.dev
#           - https://files.bjw-s.dev/oidc-callback.html
#           - https://files.bjw-s.dev/oidc-silent-redirect.html
#         userinfo_signed_response_alg: none
