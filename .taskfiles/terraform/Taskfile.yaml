---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

env:
  TERRAFORM_WORKING_DIR: "terraform"

tasks:
  all:
    desc: Run Terraform init and plan for all modules
    silent: true
    dir: '{{.USER_WORKING_DIR}}'
    vars:
      TERRAFORM_DIR:
        sh: find {{.TERRAFORM_WORKING_DIR}} -d -depth 1
    cmds:
      - for: {var: TERRAFORM_DIRS}
        cmd: |
          echo "Working on {{.ENVIRONMENT}} in {{ .ITEM }}"
          cd {{ .ITEM }}
          terraform init
          terraform plan
          terraform apply
          cd ..

  init:
    desc: Run Terraform init
    silent: true
    dir: '{{.USER_WORKING_DIR}}/{{.TERRAFORM_WORKING_DIR}}/{{.stack}}'
    vars:
      environment: '{{ or .environment (fail "Argument (environment) is required") }}'
      stack: '{{ or .stack (fail "Argument (stack) is required") }}'
    dotenv:
      - '{{.USER_WORKING_DIR}}/.config/.env.{{.environment}}'
    cmds:
      # - terraform init -reconfigure
      - echo "Working on {{.environment}} in {{.stack}}"
      - echo "Working on ${TF_WORKSPACE}"


  environment:
    desc: Run Terraform init and plan for a specific environment
    summary: |
      Args:
        environment: Environment to run command against (required)
    vars:
      environment: '{{ or .environment (fail "Argument (environment) is required") }}'
      TERRAFORM_DIRS:
        sh: find {{.TERRAFORM_WORKING_DIR}} -d -depth 1 -name {{.environment}}
    cmds:
      - for: {var: TERRAFORM_DIRS}
        cmd: |
          echo "Working on {{.environment}} in {{ .ITEM }}"
          # cd {{ .ITEM }}
          # terraform init
          # terraform plan
          # terraform apply
          # cd ..
